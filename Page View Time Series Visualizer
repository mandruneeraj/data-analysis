import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# 1. Import Data
def load_data(file_path):
    df = pd.read_csv(file_path, parse_dates=['date'], index_col='date')
    return df

# 2. Clean Data (remove top and bottom 2.5%)
def clean_data(df):
    # Calculate the 2.5th and 97.5th percentiles
    lower_percentile = df['page_views'].quantile(0.025)
    upper_percentile = df['page_views'].quantile(0.975)
    
    # Filter the data to remove the extreme outliers
    df_clean = df[(df['page_views'] >= lower_percentile) & (df['page_views'] <= upper_percentile)]
    return df_clean

# 3. Line Plot
def draw_line_plot(df):
    df_copy = df.copy()
    
    plt.figure(figsize=(12, 6))
    plt.plot(df_copy.index, df_copy['page_views'], color='blue')
    plt.title('Daily freeCodeCamp Forum Page Views 5/2016-12/2019')
    plt.xlabel('Date')
    plt.ylabel('Page Views')
    plt.grid(True)
    plt.tight_layout()
    plt.savefig('line_plot.png')
    plt.show()

# 4. Bar Plot
def draw_bar_plot(df):
    df_copy = df.copy()
    
    # Group by year and month and calculate the mean page views
    df_copy['year'] = df_copy.index.year
    df_copy['month'] = df_copy.index.month
    
    monthly_avg = df_copy.groupby(['year', 'month'])['page_views'].mean().unstack()
    
    # Plot the bar chart
    monthly_avg.plot(kind='bar', figsize=(12, 6))
    plt.title('Average Daily Page Views for Each Month Grouped by Year')
    plt.xlabel('Years')
    plt.ylabel('Average Page Views')
    plt.legend(title='Months', labels=[
        'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'
    ])
    plt.tight_layout()
    plt.savefig('bar_plot.png')
    plt.show()

# 5. Box Plot
def draw_box_plot(df):
    df_copy = df.copy()
    
    # Add year and month columns for grouping
    df_copy['year'] = df_copy.index.year
    df_copy['month'] = df_copy.index.month
    
    # Create the year-wise box plot
    plt.figure(figsize=(12, 6))
    sns.boxplot(x='year', y='page_views', data=df_copy)
    plt.title('Year-wise Box Plot (Trend)')
    plt.xlabel('Year')
    plt.ylabel('Page Views')
    plt.tight_layout()
    plt.savefig('year_box_plot.png')
    plt.show()

    # Create the month-wise box plot
    plt.figure(figsize=(12, 6))
    sns.boxplot(x='month', y='page_views', data=df_copy)
    plt.title('Month-wise Box Plot (Seasonality)')
    plt.xlabel('Month')
    plt.ylabel('Page Views')
    plt.tight_layout()
    plt.savefig('month_box_plot.png')
    plt.show()

# 6. Main Function for Testing
def main():
    df = load_data('fcc-forum-pageviews.csv')
    df_clean = clean_data(df)
    
    draw_line_plot(df_clean)
    draw_bar_plot(df_clean)
    draw_box_plot(df_clean)

# Run the main function for testing
if __name__ == "__main__":
    main()
