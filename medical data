# Step 1: Import necessary libraries and load the data
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

# Load the data
df = pd.read_csv('medical_examination.csv')

# Step 2: Add an overweight column
# Calculate BMI = weight / (height in meters)^2
df['bmi'] = df['weight'] / ((df['height'] / 100) ** 2)
df['overweight'] = df['bmi'].apply(lambda x: 1 if x > 25 else 0)

# Step 3: Normalize cholesterol and gluc columns
df['cholesterol'] = df['cholesterol'].apply(lambda x: 0 if x == 1 else 1)
df['gluc'] = df['gluc'].apply(lambda x: 0 if x == 1 else 1)

# Step 4: Create a DataFrame for the cat plot
df_cat = pd.melt(df, id_vars=['cardio'], value_vars=['cholesterol', 'gluc', 'smoke', 'alco', 'active', 'overweight'])

# Rename columns for catplot
df_cat = df_cat.rename(columns={'variable': 'feature', 'value': 'result'})

# Step 5: Create the categorical plot
sns.set(style="whitegrid")
fig = sns.catplot(x="feature", hue="result", col="cardio", data=df_cat, kind="count", height=5, aspect=1.5)
fig.set_axis_labels("Feature", "Count")
fig.set_titles("Cardio = {col_name}")

# Show the plot
plt.show()

# Step 6: Clean the data for heatmap
# Remove incorrect data as specified
df_heat = df[(df['ap_lo'] <= df['ap_hi']) &  # diastolic pressure must be <= systolic
             (df['height'] >= df['height'].quantile(0.025)) &  # height must be > 2.5th percentile
             (df['height'] <= df['height'].quantile(0.975)) &  # height must be < 97.5th percentile
             (df['weight'] >= df['weight'].quantile(0.025)) &  # weight must be > 2.5th percentile
             (df['weight'] <= df['weight'].quantile(0.975))]  # weight must be < 97.5th percentile

# Step 7: Calculate the correlation matrix
corr = df_heat.corr()

# Step 8: Generate a mask for the upper triangle
mask = np.triu(np.ones_like(corr, dtype=bool))

# Step 9: Set up the matplotlib figure
plt.figure(figsize=(10, 8))

# Step 10: Plot the correlation matrix using a heatmap
sns.heatmap(corr, annot=True, cmap='coolwarm', mask=mask, fmt='.1f', linewidths=0.5, cbar_kws={'shrink': 0.8})

# Show the heatmap
plt.show()
